---

# local task that generates an ssh onfig to connect to VMs
#   - input/requires: './qemu-config.yml' 
- hosts: local
  vars:
    qemu_config: "{{ lookup('file', 'qemu-config.yml') | from_yaml }}"
  tasks:

    - name: get ips for invenotry hostnames
      include_tasks: 'get-ips.yml'
      loop_control:
        index_var: i
      loop: '{{ qemu_config }}'

    - name: copy ip4 adress to qemu config file
      copy:
        content: '{{ qemu_config | to_nice_yaml }}'
        dest: 'qemu-config.yml'

    - name: create ssh config
      template:
        src: 'templates/config.j2'
        dest: '../ssh/config'

- hosts: qemu
  tasks:
    - name: set hostname
      command: 'hostnamectl set-hostname {{ inventory_hostname }}'
      register: hostname_update

    - name: restart network to register hostname with dns server
      service:
        name: network
        state: restarted
      when: hostname_update.changed

    - name: set ssh private key
      copy:
        src: '{{ ssh_identity_file }}'
        dest: '{{ ansible_env.HOME }}/.ssh/id_rsa'
        owner: '{{ ssh_user }}'
        group: '{{ ssh_user }}'
        mode: '0600'

    - name: add additional users
      user:
        name: '{{ item.name }}'
        shell: /bin/bash
        groups: '{{ item.additional_groups }}'
        append: yes
      loop: '{{ additional_users }}'

    - name: generate additional users ssh keys
      user:
        name: '{{ item.name }}'
        generate_ssh_key: '{{ item.generate_ssh_key }}'
      loop: '{{ additional_users }}'
      when: item.generate_ssh_key | default(false, true) and not item.ssh_key | default(false, true)

    - name: ensure ssh directory for additional users exists
      file:
        path: '/home/{{ item.name }}/.ssh'
        state: directory
        mode: '0700'
      loop: '{{ additional_users }}'

    - name: set additional users ssh keys from existing key
      copy:
        src: '{{ ssh_identity_file }}'
        dest: '/home/{{ item.name }}/.ssh/id_rsa'
        owner: '{{ item.name }}'
        group: '{{ item.name }}'
        mode: '0600'
      loop: '{{ additional_users }}'
      when: item.ssh_key | default(false, true) and not item.generate_ssh_key | default(false, true)

    - name: set authorized key for user
      authorized_key:
        user: '{{ item.name }}'
        state: present
        key: '{{ lookup("file", item.authorized_key) }}'
      loop: '{{ additional_users }}'
      when: item.authorized_key | default(false, true)
